---
interface Props {
	title: string
	icon: any
	dataAttribute: string
}
const { title, icon: Icon, dataAttribute } = Astro.props as Props
---

<div class="element" data-atribute={dataAttribute}>
	<Icon />
	{title}
</div>

<style>
	.element {
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: center;
		gap: 1.5rem;
		border: 1px solid var(--color-zinc-100);
		color: var(--color-zinc-100);
		width: 150px;
		height: 150px;
		transition: all 0.3s ease-in-out;
		cursor: pointer;
		&:hover {
			transform: scale(1.05);
			box-shadow: 0 0 4px var(--color-zinc-100);
		}
	}
</style>

<script>
	import { $, $$ } from "@/libs/utils"
	import { toggleModal } from "@/libs/modal"

	document.addEventListener("astro:page-load", () => {
		const modalGeneric = $("#modal-generic") as HTMLElement
		const elements: NodeListOf<HTMLElement> = $$(".element")

		elements.forEach((element) => {
			element.addEventListener("click", () => {
				const dataAttribute = element.getAttribute("data-atribute")
				;(
					modalGeneric.querySelector(
						`[data-content="${dataAttribute}"]`
					) as HTMLElement
				).style.display = "block"
				toggleModal(modalGeneric)
			})
			modalGeneric.addEventListener("click", () => {
				toggleModal(modalGeneric)
				document.querySelectorAll("[data-content]").forEach((content) => {
					;(content as HTMLElement).style.display = "none"
				})
			})
		})
	})
</script>
