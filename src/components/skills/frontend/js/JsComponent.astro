---
import JavaScript from "@/components/svg/JavaScript.astro"
import ProgressBar from "@/components/ui/ProgressBar.astro"

const textTooltip = {
	textLevel1:
		"<span>JavaScript (JS)</span> es un lenguaje de programación ampliamente utilizado tanto en el desarrollo web como en otros ámbitos. Inicialmente creado para agregar interactividad a las páginas web, JS ha evolucionado hasta convertirse en un lenguaje de programación versátil y poderoso que se ejecuta en el navegador del usuario. Es un componente fundamental de la web moderna y se utiliza para una amplia gama de aplicaciones, desde la creación de páginas web dinámicas hasta el desarrollo de aplicaciones web complejas y juegos en línea.",
}
const { textLevel1 } = textTooltip
---

<div class="container-java-script">
	<div class="level-1">
		<div class="icon">
			<JavaScript height={60} width={60} fill="#efb810" />
		</div>
	</div>
	<div class="text">
		<p set:html={textLevel1} />
		<br />
		<p>
			En mi día a día como desarrollador, JavaScript se ha convertido en el
			pilar fundamental de mi trabajo. Tanto en el ámbito del cliente como del
			servidor.
		</p>
		<br />
		<p>
			Dentro del contexto de mi trabajo, me encuentro inmerso en entornos que
			hacen uso de tecnologías como <span>Oracle WebCenter Sites (OWCS)</span> y
			<span>Spring Framework</span>. En este escenario, JavaScript se erige como
			una herramienta indispensable, permitiéndome interactuar con los elementos
			de la interfaz de usuario de forma ágil y eficiente, así como también
			facilitando la comunicación con el servidor para la manipulación de datos
			y la gestión de eventos.
		</p>
		<br />
		<p>
			A lo largo de mi trayectoria y formación, he tenido el privilegio de
			adentrarme en una variada selección de bibliotecas y herramientas dentro
			del vasto ecosistema de JavaScript. Entre estas, destaca <span
				>jQuery</span
			>, una biblioteca que ha mantenido su relevancia como un pilar del
			desarrollo web a lo largo de los años. Su sintaxis simplificada y su
			capacidad de implementación en prácticamente cualquier navegador actual
			son aspectos fundamentales que han enriquecido y agilizado mi labor
			actual.
		</p>
		<br />
		<p>
			Me identifico como un desarrollador con una amplia experiencia y un
			dominio sólido de JavaScript. Si por mí fuera, lo emplearía para todo
			jajaja. Aunque, últimamente, he estado optando por <span>TypeScript</span>
			en mis proyectos personales. El tipado estático que ofrece esta herramienta
			ha sido de gran ayuda, brindando mayor estructura y claridad a mi código.
		</p>
	</div>
	<div class="container-bar">
		<ProgressBar value={75} title="Tipado Dinámico" />
		<ProgressBar value={80} title="High Order Function" />
		<ProgressBar value={85} title="Closures" />
		<ProgressBar value={85} title="ProtoType" />
		<ProgressBar value={90} title="Async" />
		<ProgressBar value={80} title="DOM" />
		<ProgressBar value={80} title="Promises" />
		<ProgressBar value={75} title="Arrow Function" />
		<ProgressBar value={70} title="Events" />
		<ProgressBar value={75} title="Class" />
	</div>
</div>

<style>
	:root {
		--color-dark: #111;
		--h-level: 110px;
		--w-level: 110px;
		--color-primary-js: #efb810;
	}
	.container-java-script {
		position: relative;
		display: flex;
		justify-content: flex-start;
		align-items: center;
		flex-direction: column;
		width: 100%;
		.level-1 {
			position: relative;
			cursor: pointer;
			.icon {
				border-radius: 50%;
				height: var(--h-level);
				width: var(--w-level);
				display: flex;
				justify-content: center;
				align-items: center;
				border: 1px dashed var(--color-primary-js);
				margin-bottom: 50px;
			}
		}
		.text {
			text-align: start;
			width: 80%;
			p {
				font-weight: 500;
				color: var(--color-zinc-100);
				line-height: 1.5;
				span {
					color: var(--color-primary-js);
					font-weight: bold;
				}
			}
		}
		.container-bar {
			display: flex;
			justify-content: space-between;
			align-items: center;
			flex-wrap: wrap;
			width: 80%;
			margin-top: var(--p-40);
		}
	}
</style>
