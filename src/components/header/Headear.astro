---
import NavBarDesktop from "./NavBarDesktop.astro"
import NavBarMobile from "./NavBarMobile.astro"
---

<header id="header">
	<div class="logo">
		<a href="/">
			<img src="/logo-old.svg" title="Logo" alt="Logo" loading="eager" />
			<span>Veriel.Dev</span>
		</a>
	</div>
	<div id="open-menu">
		<svg
			xmlns="http://www.w3.org/2000/svg"
			width="40"
			height="40"
			viewBox="0 0 24 24"
			fill="none"
			stroke="currentColor"
			stroke-width="2"
			stroke-linecap="round"
			stroke-linejoin="round"
			class="lucide lucide-menu"
			><line x1="4" x2="20" y1="12" y2="12"></line><line
				x1="4"
				x2="20"
				y1="6"
				y2="6"></line><line x1="4" x2="20" y1="18" y2="18"></line></svg
		>
	</div>
	<NavBarDesktop />
	<NavBarMobile />
</header>

<style>
	#header {
		display: flex;
		justify-content: space-between;
		align-items: center;

		.logo {
			a {
				font-size: var(--font-size-large);
				font-weight: bold;
				text-decoration: none;
				color: var(--color-zinc-100);
				display: flex;
				align-items: center;
				justify-content: flex-start;
				gap: var(--p-10);
				img {
					width: fit-content;
					height: 40px;
				}
				span {
					margin-top: var(--p-20);
				}
			}
		}
		#open-menu {
			display: none;
			svg {
				cursor: pointer;
			}
		}
		#nav-bar-desktop ul {
			display: flex;
			align-items: center;
			justify-content: space-between;
			gap: var(--p-20);
			list-style: none;
			margin-top: var(--p-20);

			li {
				a {
					color: var(--color-zinc-100);
					padding: 5px 10px;
					position: relative;
					text-decoration: none;
					&::after {
						content: "";
						position: absolute;
						left: 0;
						bottom: 0;
						width: 0;
						height: 2px;
						background-color: var(--color-zinc-100);
						transition: width 0.3s ease;
					}
					&:hover::after {
						width: 100%;
					}
				}
			}
		}
		#nav-bar-mobile {
			display: none;
		}

		@media screen and (max-width: 768px) {
			display: flex;
			align-items: center;
			justify-content: space-between;
			gap: 1rem;
			position: relative;
			#open-menu svg {
			}
			#nav-bar-desktop {
				display: none;
			}
			#nav-bar-mobile {
				display: none;
				position: absolute;
				background: var(--background-gradient-lineal);
				top: 0;
				left: 0;
				width: 100%;
				z-index: 1;
				#close-menu {
					display: none;
					svg {
						position: fixed;
						top: 0.2rem;
						right: 0.2rem;
						cursor: pointer;
					}
				}

				ul {
					display: flex;
					flex-direction: column;
					justify-content: center;
					align-items: center;
					width: 100%;
					height: 100vh;
					gap: 4rem;
					list-style: none;

					li {
						a {
							color: var(--color-zinc-100);
							font-size: var(--font-size-large);
							padding: 5px 10px;
							position: relative;
							text-decoration: none;
							&::after {
								content: "";
								position: absolute;
								left: 0;
								bottom: 0;
								width: 0;
								height: 2px;
								background-color: var(--color-zinc-100);
								transition: width 0.3s ease;
							}
							&:hover::after {
								width: 100%;
							}
						}
					}
				}
			}
		}
	}
</style>
<script>
	document.addEventListener("astro:page-load", () => {
		const openMenu = document.querySelector("#open-menu") as HTMLElement

		window.innerWidth <= 768
			? (openMenu.style.display = "block")
			: (openMenu.style.display = "none")

		const closeMenu = document.querySelector("#close-menu") as HTMLElement
		const navBarMobile = document.querySelector(
			"#nav-bar-mobile"
		) as HTMLElement

		openMenu.addEventListener("click", () => {
			toggleMenu(true)
		})
		closeMenu.addEventListener("click", () => {
			toggleMenu(false)
		})

		function toggleMenu(isOpen: boolean) {
			navBarMobile.style.animation = ""
			document.body.style.overflow = isOpen ? "hidden" : "auto"
			if (isOpen) {
				navBarMobile.style.display = "block"
			} else {
				setTimeout(() => {
					navBarMobile.style.display = "none"
				}, 800)
			}

			navBarMobile.style.animation = isOpen
				? "slideIn 0.8s forwards"
				: "slideOut 0.8s forwards"
			closeMenu.style.display = isOpen ? "block" : "none"
		}
	})
</script>
